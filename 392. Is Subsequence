class Solution:
    def isSubsequence(self, s: str, t: str) -> bool:
        s_pointer = 0

        # our 't_pointer'
        for i,v in enumerate(t):
            # base case
            if s_pointer == len(s):
                return True
            
            if s[s_pointer] == v:
                s_pointer += 1
            
        
        if s_pointer == len(s):
            return True
        else:
            return False

        


'''
2 pointers: each has their own at start

s = "abc"
        |

t = "ahbgdc"
          |

increment s pointer if we find a match
t pointer will alwys be incrementing up no matter

if at any point s pointer == len(s), we reutrn true

if we run out on t, return false


'''
