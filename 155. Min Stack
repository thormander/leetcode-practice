class MinStack:

    def __init__(self):
        self.stack = []
        self.minstack = []

    def push(self, val: int) -> None:
        if not self.stack:
            self.minstack.append(val) # default to current val if its empty
        
        self.stack.append(val)

        # keep min same
        if self.minstack[-1] <= val:
            self.minstack.append(self.minstack[-1])
        else:
            self.minstack.append(val) # case where last min was greater


    def pop(self) -> None:
        self.stack.pop()
        self.minstack.pop()

    def top(self) -> int:
        return self.stack[-1]
        

    def getMin(self) -> int:
        return self.minstack[-1]
        


# Your MinStack object will be instantiated and called as such:
# obj = MinStack()
# obj.push(val)
# obj.pop()
# param_3 = obj.top()

# param_4 = obj.getMin()

# [0 1 2 3      ] top
# [0 0 0 0      ]
